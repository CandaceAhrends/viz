{"version":3,"mappings":";6JAEA,MAAMA,EAAQC,EAAM,KAAK,IAAMC,EAAA,WAAO,oCAAkB,OAAAC,KAAA,GAAC,6BAMnDC,EAAa,CAAC,CAAE,OAAAC,EAAQ,KAAAC,EAAM,UAAAC,KAAgB,CAClD,KAAM,CAACC,EAAQC,CAAS,EAAIC,WAAS,EAAE,EACjC,CAACC,EAASC,CAAU,EAAIF,WAASG,CAAa,EAC9C,CAAE,KAAAC,EAAM,MAAAC,EAAO,UAAAC,CAAA,EAAcC,EAAiB,CAClD,OAAAZ,EACA,KAAAC,EACA,UAAAC,CAAA,CACD,EAEDW,mBAAU,IAAM,CACV,GAAAJ,GAAQA,EAAK,OAAS,EAAG,CACrB,MAAAK,EAAUC,EAAqBN,CAAI,EACzCL,EAAU,CAAC,CAAE,KAAMU,CAAS,EAAC,EAC7B,MAAME,EAAQ,GAAGhB,CAAM,MAAMiB,EAAWhB,CAAI,CAAC,GAClCM,EAAA,CACT,GAAGC,EACH,MAAO,CACL,GAAGA,EAAc,MACjB,KAAMQ,CAAA,CACR,CACD,EACH,EACC,CAACP,CAAI,CAAC,EAGPS,MAACC,WAAS,UAAWD,MAAAE,EAAA,EAAgB,EAClC,SAAAV,EACEQ,MAAA,OAAI,UAAU,8BACb,SAACA,MAAA,OAAI,UAAU,SAAU,GAC3B,EACEP,EACFO,EAAA,IAAC,MAAI,WAAU,8BACb,SAAAA,EAAA,IAAC,MAAI,WAAU,SAAU,EAC3B,GAEAA,EAAA,IAACvB,EAAA,CACC,UAAU,kBACV,QAAAW,EACA,OAAAH,EACA,KAAK,gBAGX,CAEJ","names":["Chart","React","__vitePreload","n","StockChart","symbol","date","timeFrame","series","setSeries","useState","options","setOptions","CHART_OPTIONS","data","error","isLoading","useGetChartQuery","useEffect","candles","generateChartCandles","title","formatDate","jsx","Suspense","LoadingFallback"],"ignoreList":[],"sources":["../../src/components/charts/StockChart.jsx"],"sourcesContent":["import React, { useEffect, useState, Suspense } from 'react';\nimport LoadingFallback from './LoadingFallback';\nconst Chart = React.lazy(() => import('react-apexcharts'));\nimport { useGetChartQuery } from '../../features/chartSlice';\nimport { CHART_OPTIONS } from '../../consts';\nimport { formatDate, generateChartCandles } from '../../utils';\nimport './charts.scss';\n\nconst StockChart = ({ symbol, date, timeFrame }) => {\n  const [series, setSeries] = useState([]);\n  const [options, setOptions] = useState(CHART_OPTIONS);\n  const { data, error, isLoading } = useGetChartQuery({\n    symbol,\n    date,\n    timeFrame,\n  });\n\n  useEffect(() => {\n    if (data && data.length > 0) {\n      const candles = generateChartCandles(data);\n      setSeries([{ data: candles }]);\n      const title = `${symbol} - ${formatDate(date)}`;\n      setOptions({\n        ...CHART_OPTIONS,\n        title: {\n          ...CHART_OPTIONS.title,\n          text: title,\n        },\n      });\n    }\n  }, [data]);\n\n  return (\n    <Suspense fallback={<LoadingFallback />}>\n      {error ? (\n        <div className=\"spinner-container h-[20rem]\">\n          <div className=\"spinner\"></div>\n        </div>\n      ) : isLoading ? (\n        <div className=\"spinner-container h-[20rem]\">\n          <div className=\"spinner\"></div>\n        </div>\n      ) : (\n        <Chart\n          className=\"text-black mr-3\"\n          options={options}\n          series={series}\n          type=\"candlestick\"\n        />\n      )}\n    </Suspense>\n  );\n};\n\nexport default StockChart;\n"],"file":"assets/StockChart-DqWXvgEJ.js"}